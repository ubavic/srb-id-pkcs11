name: "Build and release"

on:
  push:
    tags:
      - "v*"

env:
  LIB_NAME: "libsrb-id-pkcs11"
  ZIG_VERSION: "0.15.1"
  OASIS_URL: "https://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/errata01/os/include/pkcs11-v2.40"
  VERSION_FILE: "src/version.zig"

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setversion.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Linux deps
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libpcsclite-dev
      - name: Install zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}
      - name: Download PKCS11
        run: |
          curl --output include/pkcs11.h $OASIS_URL/pkcs11.h
          curl --output include/pkcs11f.h $OASIS_URL/pkcs11f.h
          curl --output include/pkcs11t.h $OASIS_URL/pkcs11t.h
      - name: Test
        run: |
          zig build test
      - name: Check tag version
        id: setversion
        run: |      
          major=$(grep -Po 'pub const major = \K\d+' "$VERSION_FILE")
          minor=$(grep -Po 'pub const minor = \K\d+' "$VERSION_FILE")
          patch=$(grep -Po 'pub const patch = \K\d+' "$VERSION_FILE")
          
          version="v$major.$minor.$patch"
          tag="${{github.ref_name}}"
          
          if [ "$tag" != "$version" ]; then
            echo "Error: tag ($tag) does not match version ($version)"
            exit 1
          fi
          
          echo "version=$major.$minor.$patch" >> $GITHUB_OUTPUT

  buildLinux:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Linux deps
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config libpcsclite-dev
      - name: Install zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}
      - name: Download PKCS11
        run: |
          curl --output include/pkcs11.h $OASIS_URL/pkcs11.h
          curl --output include/pkcs11f.h $OASIS_URL/pkcs11f.h
          curl --output include/pkcs11t.h $OASIS_URL/pkcs11t.h
      - name: Build
        run: |
          zig build -Doptimize=ReleaseSmall -Dcpu=baseline
          mkdir artifact
          cp zig-out/lib/*.so.*.*.* artifact/.
      - name: Upload library
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-artifact
          path: artifact/*

  buildMacArm:
    runs-on: macos-latest
    needs: [test]
    steps:
      - name: Checkout mac-os branch
        uses: actions/checkout@v4
        with:
          ref: mac-os
      - name: Install macOS deps
        run: |
          brew update
          brew install pkg-config pcsc-lite
      - name: Install zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}
      - name: Download PKCS11
        run: |
          curl --output include/pkcs11.h $OASIS_URL/pkcs11.h
          curl --output include/pkcs11f.h $OASIS_URL/pkcs11f.h
          curl --output include/pkcs11t.h $OASIS_URL/pkcs11t.h
      - name: Build
        run: |
          zig build -Doptimize=ReleaseSmall -Dcpu=baseline
          mkdir artifact
          cp zig-out/lib/$LIB_NAME.*.*.*.dylib artifact/$LIB_NAME.arm.${{needs.test.outputs.version}}.dylib
      - name: Upload library
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm-build-artifact
          path: artifact/*

  buildMacIntel:
    runs-on: macos-15-intel
    needs: [test]
    steps:
      - name: Checkout mac-os branch
        uses: actions/checkout@v4
        with:
          ref: mac-os
      - name: Install macOS deps
        run: |
          brew update
          brew install pkg-config pcsc-lite
      - name: Install zig
        uses: mlugg/setup-zig@v2
        with:
          version: ${{ env.ZIG_VERSION }}
      - name: Download PKCS11
        run: |
          curl --output include/pkcs11.h $OASIS_URL/pkcs11.h
          curl --output include/pkcs11f.h $OASIS_URL/pkcs11f.h
          curl --output include/pkcs11t.h $OASIS_URL/pkcs11t.h
      - name: Build
        run: |
          zig build -Doptimize=ReleaseSmall -Dcpu=baseline
          mkdir artifact
          cp zig-out/lib/$LIB_NAME.*.*.*.dylib artifact/$LIB_NAME.x64.${{needs.test.outputs.version}}.dylib
      - name: Upload library
        uses: actions/upload-artifact@v4
        with:
          name: macos-intel-build-artifact
          path: artifact/*

  release:
    runs-on: ubuntu-latest
    needs: [buildLinux, buildMacArm, buildMacIntel]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Move files
        run: |
          mv linux-build-artifact/* .
          mv macos-arm-build-artifact/* .
          mv macos-intel-build-artifact/* .
      - name: Generate release body
        run: |
          touch changelog.md
          echo ''    >> changelog.md
          echo '```' >> changelog.md
          sha256sum *.so* >> changelog.md
          echo '```' >> changelog.md
          echo '```' >> changelog.md
          sha256sum *.x64.* >> changelog.md
          echo '```' >> changelog.md
          echo '```' >> changelog.md
          sha256sum *.arm.* >> changelog.md
          echo '```' >> changelog.md
          echo ''    >> changelog.md
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./*.so.*
            ./*.dylib
          body_path: changelog.md
          tag_name: ${{github.ref_name}}
